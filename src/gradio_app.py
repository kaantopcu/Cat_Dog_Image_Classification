# -*- coding: utf-8 -*-
"""gradio_app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17IAHmAqIZGLwc-7hmANyUIotYqkiv7Ge
"""

import gradio as gr
from keras.models import load_model
from tensorflow.keras.preprocessing import image
import numpy as np

# Load the trained model
model_path = 'models/cats_and_dogs_small_1.h5'
model = load_model(model_path)

# Function to preprocess the image
def preprocess_image(image_path):
    img = image.load_img(image_path, target_size=(150, 150))
    img_array = image.img_to_array(img)
    img_array = np.expand_dims(img_array, axis=0)
    return img_array

# Define the labels
labels = {0: 'Cat', 1: 'Dog'}

# Gradio app
def classify_image(image_file):
    # Make a prediction
    img_array = preprocess_image(image_file.name)
    prediction = model.predict(img_array)
    predicted_class = np.argmax(prediction)
    predicted_label = labels[predicted_class]
    confidence = prediction[0][predicted_class]

    return f"Prediction: {predicted_label} (Confidence: {confidence:.2f})"

# Create a Gradio interface
inputs = gr.inputs.Image(label="Upload an image...")
outputs = gr.outputs.Textbox(label="Prediction")

gr.Interface(fn=classify_image, inputs=inputs, outputs=outputs).launch()